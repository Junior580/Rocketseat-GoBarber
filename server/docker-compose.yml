services:
  nginx:
    image: nginx:1.27.0-alpine
    container_name: gobarber-nginx-app
    ports:
      - '8080:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - netapp
    depends_on:
      - app1
      - app2

  app1:
    container_name: gobarber-app1
    build:
      context: .
    env_file:
      - .env.production
    environment:
      - RUN_MIGRATIONS=true
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - netapp

  app2:
    container_name: gobarber-app2
    build:
      context: .
    env_file:
      - .env.production
    environment:
      - RUN_MIGRATIONS=false
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - netapp

  postgres:
    container_name: gobarber-postgres
    image: postgres:16.3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/postgresdata
    networks:
      - netapp

  mongodb:
    container_name: gobarber-mongo
    image: mongo:8.0
    environment:
      MONGO_INITDB_DATABASE: gobarber
    volumes:
      - mongo_data:/var/lib/mongodb/mongodata
    networks:
      - netapp

  redis:
    container_name: gobarber-redis
    image: redis:6.2
    command: ['redis-server', '--requirepass', 'docker']
    networks:
      - netapp

networks:
  netapp:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local
